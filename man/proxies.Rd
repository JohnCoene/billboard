% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proxies.R
\name{b_zoom_p}
\alias{b_zoom_p}
\alias{b_focus_p}
\alias{b_transform_p}
\alias{b_stack_p}
\title{Zoom}
\usage{
b_zoom_p(proxy, domain)

b_focus_p(proxy, series)

b_transform_p(proxy, to, serie)

b_stack_p(proxy, serie)
}
\arguments{
\item{proxy}{an object of class \code{billboardProxy} as returned by \code{\link{billoardProxy}}.}

\item{domain}{domain to zoom to.}
}
\description{
Zoom
}
\examples{
\dontrun{
library(shiny)
ui <- fluidPage(
  fluidRow(
    column(
    3,
     sliderInput("zoom",
       "Zoom on a region",
       min = 0,
       max = 100,
       value = 100
     )
    ),
    column(
      3,
     selectInput(
       "transform",
       "Filter:",
       choices = c("line", "spline", "area", "area-spline", "scatter", "bar"),
       selected = "line"
     )
    ),
    column(
      3,
     selectInput(
      "focus",
       label = "Focus on data",
       choices = c("y", "z"),
       selected = "y"
     )
    ),
    column(
      3,
     selectInput(
      "stack",
       label = "Stack",
       choices = c("y", "z"),
       selected = "y",
       multiple = TRUE
     )
    )
  ),
  fluidRow(
    billboardOutput("billboard")
  )
)

server <- function(input, output){
  data <- data.frame(x = runif(100, 1, 100), 
    y = runif(100, 1, 100), 
    z = runif(100, 1, 100))

  output$billboard <- renderBillboard({
    data \%>\% 
      b_board() \%>\% 
      b_line(x) \%>\% 
      b_bar(y, stack = TRUE) \%>\% 
      b_area(z, stack = TRUE) \%>\%
      b_zoom()
  })
  
  observeEvent(input$zoom, {
    billboardProxy("billboard") \%>\% 
    b_zoom_p(c(0, input$zoom))
  })
  
  observeEvent(input$transform, {
    billboardProxy("billboard") \%>\% 
    b_transform_p(input$transform, "x")
  })
  
  observeEvent(input$focus, {
    billboardProxy("billboard") \%>\% 
    b_focus_p(list("x", input$filter))
  })
  
  observeEvent(input$stack, {
    billboardProxy("billboard") \%>\% 
    b_stack_p(list(list("x", input$stack)))
  })
}

shinyApp(ui, server)
}

}
